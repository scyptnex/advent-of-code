import unittest

from aoc import crt


class TestCrt(unittest.TestCase):
    def test_execute(self):
        t0 = crt.Crt()
        t1 = t0.execute("noop")
        self.assertEqual(t1.t, 1)
        self.assertEqual(t1.x, 1)
        t2 = t1.execute("addx 3")
        self.assertEqual(t2.t, 3)
        self.assertEqual(t2.x, 4)
        t3 = t2.execute("addx -5")
        self.assertEqual(t3.t, 5)
        self.assertEqual(t3.x, -1)

    def test_record_seq(self):
        data = [
            "addx 15",
            "addx -11",
            "addx 6  ",
            "addx -3 ",
            "addx 5  ",
            "addx -1 ",
            "addx -8 ",
            "addx 13 ",
            "addx 4  ",
            "noop    ",
            "addx -1 ",
            "addx 5  ",
            "addx -1 ",
            "addx 5  ",
            "addx -1 ",
            "addx 5  ",
            "addx -1 ",
            "addx 5  ",
            "addx -1 ",
            "addx -35",
            "addx 1  ",
            "addx 24 ",
            "addx -19",
            "addx 1  ",
            "addx 16 ",
            "addx -11",
            "noop    ",
            "noop    ",
            "addx 21 ",
            "addx -15",
            "noop    ",
            "noop    ",
            "addx -3 ",
            "addx 9  ",
            "addx 1  ",
            "addx -3 ",
            "addx 8  ",
            "addx 1  ",
            "addx 5  ",
            "noop    ",
            "noop    ",
            "noop    ",
            "noop    ",
            "noop    ",
            "addx -36",
            "noop    ",
            "addx 1  ",
            "addx 7  ",
            "noop    ",
            "noop    ",
            "noop    ",
            "addx 2  ",
            "addx 6  ",
            "noop    ",
            "noop    ",
            "noop    ",
            "noop    ",
            "noop    ",
            "addx 1  ",
            "noop    ",
            "noop    ",
            "addx 7  ",
            "addx 1  ",
            "noop    ",
            "addx -13",
            "addx 13 ",
            "addx 7  ",
            "noop    ",
            "addx 1  ",
            "addx -33",
            "noop    ",
            "noop    ",
            "noop    ",
            "addx 2  ",
            "noop    ",
            "noop    ",
            "noop    ",
            "addx 8  ",
            "noop    ",
            "addx -1 ",
            "addx 2  ",
            "addx 1  ",
            "noop    ",
            "addx 17 ",
            "addx -9 ",
            "addx 1  ",
            "addx 1  ",
            "addx -3 ",
            "addx 11 ",
            "noop    ",
            "noop    ",
            "addx 1  ",
            "noop    ",
            "addx 1  ",
            "noop    ",
            "noop    ",
            "addx -13",
            "addx -19",
            "addx 1  ",
            "addx 3  ",
            "addx 26 ",
            "addx -30",
            "addx 12 ",
            "addx -1 ",
            "addx 3  ",
            "addx 1  ",
            "noop    ",
            "noop    ",
            "noop    ",
            "addx -9 ",
            "addx 18 ",
            "addx 1  ",
            "addx 2  ",
            "noop    ",
            "noop    ",
            "addx 9  ",
            "noop    ",
            "noop    ",
            "noop    ",
            "addx -1 ",
            "addx 2  ",
            "addx -37",
            "addx 1  ",
            "addx 3  ",
            "noop    ",
            "addx 15 ",
            "addx -21",
            "addx 22 ",
            "addx -6 ",
            "addx 1  ",
            "noop    ",
            "addx 2  ",
            "addx 1  ",
            "noop    ",
            "addx -10",
            "noop    ",
            "noop    ",
            "addx 20 ",
            "addx 1  ",
            "addx 2  ",
            "addx 2  ",
            "addx -6 ",
            "addx -11",
            "noop    ",
            "noop    ",
            "noop    ",
        ]
        self.assertEqual(crt.record_seq(crt.events(crt.sequence(data))), 13140)

        render = crt.render(crt.sequence(data))
        self.assertEqual(render[0], "##..##..##..##..##..##..##..##..##..##..")
